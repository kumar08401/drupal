name: Drupal_deploy

env:
  REGISTRY_NAME: ghcr.io/${{ github.repository_owner_id }}
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  #IMAGE_TAG1: ${{ github.sha }}
  #IMAGE_TAG2: ${{ github.username}}
  IMAGE_TAG: ${{ github.run_number }}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  checkout:
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: main
    - name: Printenv
      run: printenv
  sonarqube:
    needs: checkout
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
      with:
        #path: main 
        #path: main
        # Disabling shallow clone is recommended for improving relevancy of reporting.
        fetch-depth: 0
    # Triggering SonarQube analysis as results of it are required by Quality Gate check.
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}
        #sonar_projectKey: drupal
      with:
        projectBaseDir: ./
        args: >
          -Dsonar.projectKey=drupal

    # #Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # #Force to fail step after specific time.
      #timeout-minutes: 5
      #sonar.qualitygate.wait=true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}
      with:
        scanMetadataReportFile: target/sonar/report-task.txt
  docker-login:
    needs: sonarqube
    runs-on: self-hosted
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: kumar08401
          password: $Zaq1Xsw2
  docker-build:
    needs: docker-login
    runs-on: self-hosted
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: kumar08401
          password: ${{ secrets.DOCKER_PASS }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: kumar08401/drupal:${{ env.IMAGE_TAG }}
  run-cmd:
    needs: docker-build
    runs-on: self-hosted
    steps:
      #- name: run command
        #run: pwd
      #- name: navigate to path
        #run: cd /home/master/applications/actions-runner/_work/drupal/drupal/main/helm
      - name: pwd
        run: pwd
      - name: run helm chart
        run: helm install drupal /home/master/applications/actions-runner/_work/drupal/drupal/main/helm/drupal -f /home/master/applications/actions-runner/_work/drupal/drupal/main/helm/drupal/values.yaml
      
  #build:
    #needs: checkout
    #runs-on: ubuntu-latest
    #steps:
    #- uses: actions/checkout@v2
    #- name: Buildd the Docker image
      #run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
  #login:
    #needs: build
    #runs-on: ubuntu-latest
    #steps:
    #- name: Login to Docker Hub
      #uses: docker/login-action@v3
      #with:
        #username: kumar08401
        #password: $Zaq1Xsw2
  #tag:
    #needs: login
    #runs-on: ubuntu-latest
    #steps:
    #- uses: actions/checkout@v2
    #- name: tag Docker image
      #run: docker push . --file Dockerfile --tag my-image-name:$(date +%s)
      #run: docker tag my-image-name:$(date +%s) yourhubusername/verse_gapminder:my-image-name:$(date +%s)
